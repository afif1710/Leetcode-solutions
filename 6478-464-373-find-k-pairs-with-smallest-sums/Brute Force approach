class Solution {
public:

    typedef pair<int, pair<int, int>> p;
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        int n = nums1.size();
        int m = nums2.size();
        vector<vector<int>> res;
        priority_queue<p, vector<p>> pq;  //max heap
        for(int i = 0; i<n; i++){
            for(int j = 0; j<m; j++){
                int sum = nums1[i] + nums2[j];
                if(pq.size()<k){
                    pq.push({sum, {i, j}});
                }else if(sum < pq.top().first){
                    pq.pop();
                    pq.push({sum, {i, j}});
                }else{
                    break;
                }
            }
        }
        while(!pq.empty()){
            auto tmp = pq.top();
            pq.pop();
            int i = tmp.second.first;
            int j = tmp.second.second;

            res.push_back({nums1[i], nums2[j]});
        }
        return res;
    }
};
